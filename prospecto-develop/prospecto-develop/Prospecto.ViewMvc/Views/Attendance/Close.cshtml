@model Prospecto.Models.ViewModel.AttendanceViewModel

@using (Html.BeginForm("SaveClose", "Attendance", FormMethod.Post, new { role = "Attendance" }))
{
    <section class="content-header">
        <h1>
            @ViewData["Title"]
            <small>@ViewData["Message"]</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li class="active">Atendimento</li>
        </ol>
    </section>

    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <div class="box box-info">
                    <div class="box-body">
                        @Html.HiddenFor(m => m.Id)

                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label asp-for="StatusOrder">Status Pedido <span style="color: red">*</span></label>
                                    <select asp-for="StatusOrder" id="StatusOrder" asp-items="ViewBag.ListStatusClosed" class="form-control input select2">
                                        <option value="0">Selecione uma opção</option>
                                    </select>
                                    <span class="text-danger field-validation-error" style="display: none">Informe um status corretamente!</span>
                                </div>
                            </div>

                            <div style="display: @(Model.StatusOrder == Prospecto.Models.Enums.StatusOrderEnum.GAIN ? "" : "none")" class="col-md-2 statusOrder">
                                <div class="form-group">
                                    <label asp-for="ValueClosed">Valor Fechado <span style="color: red">*</span></label>
                                    <input type="text" class="form-control" id="valueClosed" asp-for="ValueClosed" placeholder="Valor Fechado" />
                                    <span class="text-danger field-validation-error" style="display: none">Informe um valor corretamente!</span>
                                </div>
                            </div>

                            <div class="col-md-2">
                                <div class="form-group">
                                    <label>Data Fechamento <span style="color: red">*</span></label>
                                    <input type="date" class="form-control" id="dateClosed" asp-for="DateClosed" value="@(string.Format("{0:yyyy-MM-dd}", DateTime.Now))" />
                                    <span class="text-danger field-validation-error" style="display: none">Informe a data do fechamento corretamente</span>
                                </div>
                            </div>
                        </div>

                        <div style="display: @(Model.StatusOrder == Prospecto.Models.Enums.StatusOrderEnum.GAIN ? "" : "none")" class="statusOrder">
                            <h4><b>Dados Cliente</b></h4>
                            <hr />

                            <div class="row">
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label asp-for="Client.TypePerson">Tipo Pessoa</label>
                                        <select asp-for="Client.TypePerson" id="typePerson" asp-items="ViewBag.ListTypePerson" class="form-control input select2"></select>
                                        <span class="text-danger field-validation-error" style="display: none">Informe o tipo de pessoa!</span>
                                    </div>
                                </div>

                                <div style="display: @(Model.Client.TypePerson == Prospecto.Models.Enums.ClientTypePersonEnum.PHYSICAL ? "" : "none")" class="col-md-4 cpf">
                                    <div class="form-group">
                                        <label asp-for="Client.CPF">CPF</label>
                                        <input type="text" class="form-control" id="cpf" asp-for="Client.CPF" placeholder="CPF">
                                        <span class="text-danger field-validation-error" style="display: none">Informe cpf corretamente!</span>
                                    </div>
                                </div>

                                <div style="display: @(Model.Client.TypePerson == Prospecto.Models.Enums.ClientTypePersonEnum.LEGAL ? "" : "none")" class="col-md-4 cnpj">
                                    <div class="form-group">
                                        <label asp-for="Client.CNPJ">CNPJ</label>
                                        <input type="text" class="form-control" id="cnpj" asp-for="Client.CNPJ" placeholder="CNPJ">
                                        <span class="text-danger field-validation-error" style="display: none">Informe cnpj corretamente!</span>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="Client.Email">Email</label>
                                        <input type="text" class="form-control" id="email" asp-for="Client.Email" placeholder="Email">
                                        <span class="text-danger field-validation-error" style="display: none">Informe email corretamente!</span>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-8">
                                    <div class="form-group">
                                        <label>Cliente <span style="color: red">*</span></label>
                                        <input type="text" class="form-control" id="client-search" asp-for="Client.Name" placeholder="Buscar ou digitar cliente">
                                        <input type="hidden" id="clientId" name="Client.Id" asp-for="Client.Id" />
                                        <input type="text" class="form-control" id="client" readonly style="display:none;" />
                                        <span class="text-danger field-validation-error" style="display: none">Informe o nome do cliente corretamente!</span>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label asp-for="Client.Telephone">Telefone <span style="color: red">*</span></label>
                                        <input type="text" class="form-control" id="telephone" asp-for="Client.Telephone" placeholder="Telefone">
                                        <span class="text-danger field-validation-error" style="display: none">Informe telefone corretamente!</span>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label asp-for="Client.ZipCode">Cep</label>
                                        <input type="text" class="form-control" id="zipcode" asp-for="Client.ZipCode" placeholder="Cep">
                                        <span class="text-danger field-validation-error" style="display: none">Informe cep corretamente!</span>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label asp-for="Client.Address">Endereço</label>
                                        <input type="text" class="form-control" id="address" asp-for="Client.Address" placeholder="Endereço">
                                        <span class="text-danger field-validation-error" style="display: none">Informe endereço corretamente!</span>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label asp-for="Client.Number">Número</label>
                                        <input type="text" class="form-control" id="number" asp-for="Client.Number" placeholder="Número">
                                        <span class="text-danger field-validation-error" style="display: none">Informe número corretamente!</span>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label asp-for="Client.Complement">Complemento</label>
                                        <input type="text" class="form-control" asp-for="Client.Complement" placeholder="Complemento">
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="Client.Neighborhood">Bairro</label>
                                        <input type="text" class="form-control" id="neighborhood" asp-for="Client.Neighborhood" placeholder="Bairro">
                                        <span class="text-danger field-validation-error" style="display: none">Informe bairro corretamente!</span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="Client.City">Cidade</label>
                                        <input type="text" class="form-control" id="city" asp-for="Client.City" placeholder="Cidade">
                                        <span class="text-danger field-validation-error" style="display: none">Informe a cidade corretamente!</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="box-footer">
                        <div class="col-xs-2 pull-left" style="margin: 10px 0;">
                            <a href="@Url.Action("List", "Attendance")" class="btn btn-default col-md-12">Cancelar</a>
                        </div>
                        <div class="col-xs-2 pull-right" style="margin: 10px 0;">
                            <button id="save" type="submit" class="btn btn-primary col-md-12">Confirmar</button>
                        </div>
                    </div>

                    @Html.AntiForgeryToken()
                </div>
            </div>
        </div>
    </section>

    @section Scripts {
        <script>
            $(function () {
                $("#telephone").mask("(99)99999-9999");
                $("#cnpj").mask("99.999.999/9999-99");
                $("#cpf").mask("999.999.999-99");
                $("#zipcode").mask("99999-999");

                let preenchimentoAutomatico = false;

                $('#typePerson').on('change', function () {
                    if (!preenchimentoAutomatico) {
                        $('#cpf, #cnpj').val('');
                    }
                    if ($('#typePerson :selected').val() == "1") {
                        $('.cpf').show();
                        $('.cnpj').hide();
                    } else {
                        $('.cpf').hide();
                        $('.cnpj').show();
                    }
                });

                        $("#save").click(function (e) {
                            e.preventDefault(); // Impede o envio automático do formulário

                            if (validade()) {
                                let rawValue = $('#valueClosed').autoNumeric('get');
                                $('#valueClosed').val(rawValue);

                                $(this).prop("disabled", true);
                                $(this).closest("form").submit();
                            } else {
                                // Foca no primeiro campo com erro visível
                                $('.field-validation-error:visible').first().prev('input, select').focus();
                            }
                        });


                function validade() {
                    let status = $('#StatusOrder');
                    let value = $('#valueClosed');
                    let statusVal = parseInt(status.val());
                    let client = $('#client-search');
                    let telephone = $('#telephone');
                    let dateClosed = $('#dateClosed');
                    let count = 0;

                    if (!dateClosed.val()) {
                        count++;
                        dateClosed.next()[0].style.display = '';
                    } else {
                        dateClosed.next()[0].style.display = 'none';
                    }

                    if (statusVal === 0) {
                        count++;
                        status.next()[0].style.display = '';
                    } else {
                        status.next()[0].style.display = 'none';
                        if (statusVal === 1) {
                            if (!value.val() || parseFloat(value.val()) <= 0) {
                                count++;
                                value.next()[0].style.display = '';
                            } else {
                                value.next()[0].style.display = 'none';
                            }

                            if (!client.val()) {
                                count++;
                                client.next()[0].style.display = '';
                            } else {
                                client.next()[0].style.display = 'none';
                            }

                            if (!telephone.val()) {
                                count++;
                                telephone.next()[0].style.display = '';
                            } else {
                                telephone.next()[0].style.display = 'none';
                            }
                        }
                    }

                    return count === 0;
                }

                $('#StatusOrder').on('change', StatusOrder);

                function StatusOrder() {
                    let status = $('#StatusOrder').val();
                    $('.statusOrder').toggle(status === "1");
                }

                $('#valueClosed').autoNumeric('init', {
                    aSep: '.',
                    aDec: ',',
                    vMax: '9999999999.99',
                    mDec: '2',
                    vMin: '000'
                });

                $("#client-search").autocomplete({
                    source: function (request, response) {
                        $.ajax({
                            url: "/Client/SearchClients",
                            data: { term: request.term },
                            success: function (data) {
                                if (data.success === false) {
                                    alert(data.message); // erro tratado no backend
                                    return;
                                }

                                response($.map(data, function (item) {
                                    return {
                                        label: item.name + " - " + item.telephone,
                                        value: item.name,
                                        data: item
                                    };
                                }));
                            }
                        });
                    },
                    minLength: 2,
                    select: function (event, ui) {
                        const c = ui.item.data;

                        $("#clientId").val(c.id);
                        $("#client").val(c.name);
                        $("#telephone").val(c.telephone);
                        $("#email").val(c.email);
                        $("#cpf").val(c.cpf);
                        $("#cnpj").val(c.cnpj);

                        preenchimentoAutomatico = true;
                        $("#typePerson").val(c.typePerson).trigger("change");
                        preenchimentoAutomatico = false;

                        $("#address").val(c.address);
                        $("#number").val(c.number);
                        $("#complement").val(c.complement);
                        $("#zipcode").val(c.zipCode);
                        $("#neighborhood").val(c.neighborhood);
                        $("#city").val(c.city);
                    },
                    change: function (event, ui) {
                        if (!ui.item) {
                            $("#clientId").val("0");
                        }
                    }
                });
            });
        </script>
    }

}
